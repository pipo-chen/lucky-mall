<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mall.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.mall.pojo.User">
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="login_name" jdbcType="VARCHAR" property="loginName" />
    <result column="password_md5" jdbcType="VARCHAR" property="passwordMd5" />
    <result column="introduce_sign" jdbcType="VARCHAR" property="introduceSign" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="is_deleted" jdbcType="TINYINT" property="isDeleted" />
    <result column="locked_flag" jdbcType="TINYINT" property="lockedFlag" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, nick_name, login_name, password_md5, introduce_sign, address, is_deleted, 
    locked_flag, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mall_user
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from mall_user
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>

  <insert id="insert" parameterType="com.mall.pojo.User">
    insert into mall_user (user_id, nick_name, login_name, 
      password_md5, introduce_sign, address, 
      is_deleted, locked_flag, create_time
      )
    values (#{userId,jdbcType=BIGINT}, #{nickName,jdbcType=VARCHAR}, #{loginName,jdbcType=VARCHAR}, 
      #{passwordMd5,jdbcType=VARCHAR}, #{introduceSign,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{isDeleted,jdbcType=TINYINT}, #{lockedFlag,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mall.pojo.User">
    insert into mall_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="loginName != null">
        login_name,
      </if>
      <if test="passwordMd5 != null">
        password_md5,
      </if>
      <if test="introduceSign != null">
        introduce_sign,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="lockedFlag != null">
        locked_flag,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="passwordMd5 != null">
        #{passwordMd5,jdbcType=VARCHAR},
      </if>
      <if test="introduceSign != null">
        #{introduceSign,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="lockedFlag != null">
        #{lockedFlag,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mall.pojo.User">
    update mall_user
    <set>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null">
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="passwordMd5 != null">
        password_md5 = #{passwordMd5,jdbcType=VARCHAR},
      </if>
      <if test="introduceSign != null">
        introduce_sign = #{introduceSign,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="lockedFlag != null">
        locked_flag = #{lockedFlag,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mall.pojo.User">
    update mall_user
    set nick_name = #{nickName,jdbcType=VARCHAR},
      login_name = #{loginName,jdbcType=VARCHAR},
      password_md5 = #{passwordMd5,jdbcType=VARCHAR},
      introduce_sign = #{introduceSign,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      is_deleted = #{isDeleted,jdbcType=TINYINT},
      locked_flag = #{lockedFlag,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>

</mapper>